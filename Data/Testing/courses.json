[
{"id": "CISC-226","department": "CISC","course_code": "226","course_name": "Game Design","campus": "Main","description": "An introduction to techniques for designing elementary computer games. Topics will include game development tools and processes, principles of game design, game prototyping and game evaluation.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite C- in CISC124","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-234","department": "CISC","course_code": "234","course_name": "Information Structures","campus": "Main","description": "","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "CISC121","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-223","department": "CISC","course_code": "223","course_name": "Software Specifications","campus": "Main","description": "Introduction to techniques for specifying the behaviour of software, with applications of these techniques to design, verification and construction of software. Logic-based techniques such as loop invariants and class invariants. Automata and grammar-based techniques, with applications to scanners, parsers, user-interface dialogs and embedded systems. Computability issues in software specifications.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "pre Level 2 and C- in (CISC124 and CISC204).","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-235","department": "CISC","course_code": "235","course_name": "Data Structures","campus": "Main","description": "Design and implementation of advanced data structures and related algorithms, including correctness and complexity analysis.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisites C- in (CISC124 and CISC203)","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-221","department": "CISC","course_code": "221","course_name": "Computer Architecture","campus": "Main","description": "The descriptive levels of computer architecture. Instruction-set architectures. Assembly Language. Data representation. Support for operating-system management and high-level languages. Input/output and interrupts. Designing for performance. Digital Logic.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite C- in CISC124","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-231","department": "CISC","course_code": "231","course_name": "Computer Architecture","campus": "Main","description": "","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Exclusion: CISC231 excludes CISC221. A prerequisite of APSC142 and registration in a BSCE Academic Plan is required.","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Fac of Engineering & Appl Sci","academic_org": "School of Computing","units": 4.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-204","department": "CISC","course_code": "204","course_name": "Logic for Computing Science","campus": "Main","description": "Elements of mathematical logic with computing applications. Formal proof systems for propositional and predicate logic. Interpretations, validity, and satisfiability. Introduction to soundness, completeness and decidability.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite Level 2 or above and C- in [CISC121 and (CISC102 or MATH110)].","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-271","department": "CISC","course_code": "271","course_name": "Linear Data Analysis","campus": "Main","description": "Elements of linear algebra for data analysis, including: solution of linear equations; vector spaces; matrix decompositions; principal components analysis; linear regression; hyperplane classification of vectorial data.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisites Level 2 and C- in (CISC101 or CISC121) and (MATH111 or MATH112 or MATH110) and (MATH120 or MATH121 or MATH122 or [MATH123 and MATH124] or MATH126).\nExclusion No more than 3.0 units from CISC271; MATH272; PHYS313.","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-203","department": "CISC","course_code": "203","course_name": "Discrete Mathematics for Computing II","campus": "Main","description": "Proof methods. Combinatorics: permutations and combinations, discrete probability, recurrence relations. Graphs and trees. Boolean and abstract algebra.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite C- in [CISC121 and (CISC102 or MATH110)].","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-251","department": "CISC","course_code": "251","course_name": "Data Analytics","campus": "Main","description": "Introduction to data analytics; data preparation; assessing performance; prediction methods such as decision trees, random forests, support vector machines, neural networks and rules; ensemble methods such as bagging and boosting; clustering techniques such as expectation-maximization, matrix decompositions, and biclustering; attribute selection.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Exclusions CISC 251; CISC 333; CMPE 333","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-212","department": "CISC","course_code": "212","course_name": "Computing Science For Engineer","campus": "Main","description": "Introduction to design and analysis of algorithms. Control structures: recursion, backtracking. Data structures: multidimensional arrays, defined data types. Introduction to numerical computation. Documentation, testing and debugging. Object-oriented design, architecture and programming: encapsulation and representational abstraction, inheritance and polymorphism, interfaces and abstract classes, exception handling. (0/0/0/26/22)","grading_basis": "Graded","course_components": {"laboratory": "Required","lecture": "Required"},"requirements": "Prerequisite of (APSC142 and APSC174) and registered in a BSCE Academic Program.","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 4.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-220","department": "CISC","course_code": "220","course_name": "System Level Programming","campus": "Main","description": "Basic concepts of Unix-like systems. Shells and scripting. System-level programming in the C language. Software development tools and techniques.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Corequisite CISC124","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-236","department": "CISC","course_code": "236","course_name": "Fund Of Software Eng & Info St","campus": "Main","description": "","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "CISC121","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 4.5,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "CISC-282","department": "CISC","course_code": "282","course_name": "Fundamentals of Web Development","campus": "Main","description": "This course surveys current best practices for implementing attractive, usable, secure and maintainable web applications. Other issues considered include: accessibility, platform and browser independence, licensing of intellectual property, scalability, user privacy, and using web technologies in mobile development.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite Level 2 and C- in CISC 124","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "STAT-269","department": "STAT","course_code": "269","course_name": "Statistics and Probability II","campus": "Main","description": "Basic techniques of statistical estimation such as best unbiased estimates, moment estimates, maximum likelihood. Bayesian methods. Hypotheses testing. Classical distributions such as the t-distribution, F-distribution, beta distribution. These methods will be illustrated by simple linear regression. Statistical computing.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisites (MATH221 or MATH280) and (STAT268 or STAT351), or permission of the Department.","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "Dept of Mathematics & Stats","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "STAT-263","department": "STAT","course_code": "263","course_name": "Introduction to Statistics","campus": "Main","description": "A basic course in statistical methods with the necessary probability included. Topics include probability models, random variables, distributions, estimation, hypothesis testing, elementary nonparametric methods.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Recommendation An Ontario 4U MATH course or equivalent.\nExclusion No more than 3.0 units from STAT263; 267; 367; COMM162; ECON250; PSYC202; SOCY211; BIOL243; CHEE209; GPHY247; KNPE251; STAM200; POLS385; NURS323.\nOne-way Exclusion STAT269.","add_consent": "","drop_consent": "","academic_level": "Undergraduate Online","academic_group": "Faculty of Arts and Science","academic_org": "Dept of Mathematics & Stats","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
{"id": "STAT-268","department": "STAT","course_code": "268","course_name": "Statistics and Probability I","campus": "Main","description": "Basic ideas of probability theory such as random experiments, probabilities, random variables, expected values, independent events, joint distributions, conditional expectations, moment generating functions. Main results of probability theory including Chebyshev's inequality, law of large numbers, central limit theorem. Introduction to statistical computing.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Prerequisite MATH120 or MATH121 or MATH122 or MATH124.\r\nCorequisite MATH221 or MATH280.\r\nExclusion No more than 3.0 units from STAT351; STAT 268.","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "Dept of Mathematics & Stats","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}}
]