[
    {"id": "CISC-220","department": "CISC","course_code": "220","course_name": "System Level Programming","campus": "Main","description": "Basic concepts of Unix-like systems. Shells and scripting. System-level programming in the C language. Software development tools and techniques.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Corequisite CISC124","add_consent": "","drop_consent": "","academic_level": "Undergraduate","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
    {"id": "CISC-124","department": "CISC","course_code": "124","course_name": "Introduction to Computing Science II","campus": "Main","description": "Introduction to object-oriented design, architecture, and programming. Use of packages, class libraries, and interfaces. Encapsulation and representational abstraction. Inheritance. Polymorphic programming. Exception handling. Iterators. Introduction to a class design notation. Numerical computation. Applications in various areas.","grading_basis": "Graded","course_components": {"laboratory": "Required","lecture": "Required"},"requirements": "Prerequisite C- in CISC121 \nCorequisite CISC102 or MATH111 or MATH121 or MATH122 or MATH110 or MATH112 or MATH120 or MATH123 or MATH124 or MATH126 or APSC171 or APSC172 or APSC174 or COMM161 or COMM162.","add_consent": "","drop_consent": "","academic_level": "Undergraduate Online","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}},
    {"id": "CISC-121","department": "CISC","course_code": "121","course_name": "Introduction to Computing Science I","campus": "Main","description": "Introduction to design, analysis, and implementation of algorithms. Recursion, backtracking, and exits. Sequences. Elementary searching and sorting. Order-of-magnitude complexity. Documentation, iterative program development, translating natural language to code, testing and debugging.","grading_basis": "Graded","course_components": {"lecture": "Required"},"requirements": "Corequisite CISC102 or MATH111 or MATH121 or MATH110 or MATH112 or MATH120 or MATH123 or MATH124 or MATH126 or APSC171 or APSC172 or APSC174 or COMM161 or COMM162.","add_consent": "","drop_consent": "","academic_level": "Undergraduate Online","academic_group": "Faculty of Arts and Science","academic_org": "School of Computing","units": 3.0,"CEAB": {"math": 0,"basic_sci": 0,"comp_st": 0,"eng_sci": 0,"end_des": 0}}
]